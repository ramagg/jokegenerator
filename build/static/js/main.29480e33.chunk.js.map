{"version":3,"sources":["components/Form.js","components/Jokes.js","components/Homepage.js","components/Aboutpage.js","components/Header.js","components/App.js","index.js"],"names":["Form","renderJokes","useState","quantity","setQ","btnSelected","setBtnSelected","seed","setSeed","gentext","setGentext","getting","setGetting","className","onClick","value","onChange","e","target","console","log","fetch","then","response","json","data","jokesList","Jokes","text","txt","textarr","split","parse","navigator","permissions","query","name","result","newClip","state","clipboard","writeText","Homepage","jokes","setJokes","map","joke","i","key","Aboutpage","style","padding","href","Header","to","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29480e33.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nexport const Form = ({ renderJokes }) => {\r\n\r\n  const [quantity, setQ] = useState(3);\r\n  const [btnSelected, setBtnSelected] = useState(1);\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [gentext, setGentext] = useState('Generate');\r\n  const [getting, setGetting] = useState(0);\r\n\r\n  const down = () => {\r\n    if (quantity > 0) setQ(quantity + -1);\r\n  }\r\n  const up = () => {\r\n    if (quantity < 10) setQ(quantity + 1);\r\n  }\r\n  const getJokes = () => {\r\n    setGentext('Generating...')\r\n    if (!getting) {\r\n      setGetting(1);\r\n      fetch(`https://ramagg.com/jokegenerator/generate?seed=${seed}&q=${quantity}`)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n\r\n          renderJokes(data.jokesList);\r\n          setGentext('Generate')\r\n          setGetting(0);\r\n\r\n        });\r\n    } else {\r\n      console.log('Generating the jokes')\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"formbox\">\r\n      <div className=\"btnBox\">\r\n        <button className={btnSelected === 1 ? \"btnGo Selected\" : \"btnGo\"} onClick={() => setBtnSelected(1)}>RandomJokes</button>\r\n        <button className={btnSelected === 2 ? \"btnGo Selected\" : \"btnGo\"} onClick={() => setBtnSelected(2)}>DadJokes</button>\r\n      </div>\r\n      <div className=\"seedBox\">\r\n        <span>Seed:</span>\r\n        <div className=\"inputBox\">\r\n          <input className=\"seedInput\" value={seed} onChange={(e) => { setSeed(e.target.value) }} />\r\n\r\n          <div className=\"quantityBox\">\r\n            <span>Q: {quantity}</span>\r\n            <div className=\"actionBox\">\r\n              <a className=\"actionBtn\" onClick={down}><i className=\"fas fa-angle-left\"></i></a>\r\n              <a className=\"actionBtn\" onClick={up}><i className=\"fas fa-angle-right\"></i></a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button className=\"btnGo btnGenerate\" onClick={getJokes}>{gentext}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Jokes = ({ text }) => {\r\n  const updateClipboard = (newClip) => {\r\n    navigator.clipboard.writeText(newClip).then(function () {\r\n      console.log('Success')\r\n    }, function () {\r\n      console.log('Failed to have access to clipboard')\r\n\r\n    });\r\n  }\r\n  const copyJoke = () => {\r\n    navigator.permissions.query({ name: \"clipboard-write\" }).then(result => {\r\n      if (result.state == \"granted\" || result.state == \"prompt\") {\r\n        updateClipboard(text);\r\n      }\r\n    });\r\n  }\r\n  const parse = (txt) => {\r\n    let textarr = txt.split('xxbos');\r\n    console.log(textarr)\r\n\r\n    return textarr[0];\r\n\r\n  }\r\n  return (<div className=\"jokeBox\">\r\n    {\r\n      parse(text)\r\n    }\r\n    <div className=\"copyBtn\" onClick={copyJoke}><i className=\"far fa-copy\"></i></div>\r\n  </div>)\r\n}\r\n\r\nexport default Jokes;","import React, { Fragment, useState } from 'react'\r\nimport Form from './Form';\r\nimport Jokes from './Jokes';\r\n\r\nconst Homepage = () => {\r\n    const [jokes, setJokes] = useState([])\r\n    return (\r\n\r\n        <Fragment>\r\n            <Form renderJokes={setJokes} />\r\n            <div className=\"headerR\"><span>Results: </span></div>\r\n            {\r\n                jokes.map((joke, i) => {\r\n                    return <Jokes key={i} text={joke} />\r\n\r\n                })\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Homepage","import React from 'react';\r\n\r\nconst Aboutpage = () => {\r\n    return (\r\n        <div className=\"formbox\" style={{ padding: '20px' }}>\r\n            Joke generator made by <a href=\"https://twitter.com/ramgendeploy\">@ramgendeploy</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aboutpage\r\n","import React from 'react'\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h2 className=\"jokegen\">Joke Generator</h2>\r\n      <div className=\"menuLinks\">\r\n        <Link to=\"/jokegenerator\">Home</Link>\r\n        <Link to=\"/jokegenerator/about\">About</Link>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Homepage from './Homepage';\nimport Aboutpage from './Aboutpage';\nimport Header from './Header';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/jokegenerator/about\">\n          <Aboutpage />\n        </Route>\n        <Route path=\"/jokegenerator\">\n          <Homepage />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}